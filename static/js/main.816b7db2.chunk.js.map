{"version":3,"sources":["logo.svg","components/ExtraInfo.jsx","utils/defaultColors.js","components/FoodCard.jsx","App.js","serviceWorker.js","index.js","images/cat.png"],"names":["module","exports","ExtraInfo","props","amount","text","className","Card","styled","div","borderColor","disabled","colors","selected","backgroundImage","image","backgroundRepeat","backgroundPosition","background","blockHover","PurchaseLink","a","textDecoration","borderBottom","color","CardWeight","FoodCard","extras","React","useState","setBlockHover","toogleSelectCard","e","cardIndex","preventDefault","disableBlockHover","description","title","taste","selectedText","weight","disabledText","onMouseOut","onClick","extraHtml","map","extra","push","key","showExtras","href","App","cardsInit","catImage","cards","setCards","newCards","cardsHtml","card","i","showCards","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.816b7db2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\n\r\nfunction ExtraInfo(props) {\r\n  const { amount, text } = props;\r\n  return (\r\n    <div className=\"extra__string\">\r\n      {amount ?\r\n        <span className=\"extra__string-amount\">{amount}</span>\r\n        : null\r\n      }\r\n      <span className=\"extra__string-text\">{text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExtraInfo;","export default {\r\n  defaultColor: '#1698d9',\r\n  defaultHoverColor: '#2ea8e6',\r\n  selectedColor: '#d91667',\r\n  selectedHoverColor: '#e62e7a',\r\n  disabledColor: '#b3b3b3'\r\n}","import React from 'react';\r\nimport ExtraInfo from './ExtraInfo';\r\nimport '../App.css';\r\nimport styled from 'styled-components';\r\nimport colors from '../utils/defaultColors';\r\n\r\nfunction FoodCard(props) {\r\n  const { extras } = props;\r\n  const [blockHover, setBlockHover] = React.useState(false);\r\n  const showExtras = () => {\r\n    const extraHtml = [];\r\n    extras.map((extra) => {\r\n      extraHtml.push(<ExtraInfo {...extra} key={extra.amount} />)\r\n    })\r\n    return extraHtml;\r\n  }\r\n\r\n  const toogleSelectCard = (e) => {\r\n    const { toogleSelectCard, cardIndex } = props;\r\n    e.preventDefault();\r\n    disableBlockHover();\r\n    toogleSelectCard(cardIndex);\r\n  }\r\n\r\n  const enableBlockHover = () => {\r\n    setBlockHover(false);\r\n  }\r\n\r\n  const disableBlockHover = () => {\r\n    setBlockHover(true);\r\n  }\r\n  const { selected, disabled, description, title, taste, selectedText, image, weight, disabledText } = props;\r\n  return (\r\n    <div className=\"card-wrapper\">\r\n      <Card\r\n        className=\"card\"\r\n        blockHover={blockHover}\r\n        onMouseOut={enableBlockHover}\r\n        onClick={toogleSelectCard}\r\n        selected={selected}\r\n        disabled={disabled}\r\n        image={image}\r\n      >\r\n        {disabled ? <div className=\"card__disabled\"></div> : null}\r\n        <div className=\"card__general\">\r\n          <div className=\"card__description\">\r\n            <span className=\"card__description-span\">{description}</span>\r\n          </div>\r\n          <div className=\"card__title\">\r\n            <h2 className=\"card__title-h2\">{title}</h2>\r\n          </div>\r\n          <div className=\"card__taste\">\r\n            <h3 className=\"card__taste-h3\">{taste}</h3>\r\n          </div>\r\n          <div className=\"card__extras\">\r\n            {showExtras()}\r\n          </div>\r\n        </div>\r\n\r\n        <CardWeight selected={selected} disabled={disabled} className=\"card__weight\">\r\n          <div className=\"weight__amount\">\r\n            <span className=\"weight__amount-span\">{weight}</span>\r\n          </div>\r\n          <div className=\"weight__unit\">\r\n            <span className=\"weight__unit-span\">кг</span>\r\n          </div>\r\n        </CardWeight>\r\n      </Card>\r\n      <div className=\"card__relevance\">\r\n        <p className={`card__relevance-p ${disabled ? 'card__relevance-disabled' : ''} ${selected ? 'card__relevance-enabled' : ''}`}>\r\n          {disabled ?\r\n            (<>\r\n              {disabledText || `Печалька, ${taste} закончился.`}\r\n            </>) :\r\n            selected ? selectedText :\r\n              (<>\r\n                Чего сидишь? Порадуй котэ,&nbsp;\r\n                <PurchaseLink className=\"card__relevance-a\" href=\"\" onClick={toogleSelectCard}>купи</PurchaseLink>\r\n              </>)\r\n          }\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Card = styled.div({\r\n  borderColor: props => props.disabled ?\r\n    colors.disabledColor :\r\n    props.selected ?\r\n      colors.selectedColor :\r\n      colors.defaultColor,\r\n  backgroundImage: props => props.image ? `url(${props.image})` : 'none',\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundPosition: 'left bottom',\r\n  '&::after': {\r\n    background: props => props.disabled ?\r\n      colors.disabledColor :\r\n      props.selected ?\r\n        colors.selectedColor :\r\n        colors.defaultColor\r\n  },\r\n  '&:hover': {\r\n    borderColor: props => !props.blockHover ? !props.disabled ?\r\n      props.selected ?\r\n        colors.selectedHoverColor :\r\n        colors.defaultHoverColor\r\n      : '' : ''\r\n  },\r\n  '&:hover>.card__weight, &:hover::after': {\r\n    background: props => !props.blockHover ? !props.disabled ?\r\n      props.selected ?\r\n        colors.selectedHoverColor :\r\n        colors.defaultHoverColor\r\n      : '' : ''\r\n  }\r\n\r\n});\r\n\r\nconst PurchaseLink = styled.a({\r\n  textDecoration: 'none',\r\n  borderBottom: `1px dashed ${colors.defaultColor}`,\r\n  color: colors.defaultColor,\r\n});\r\n\r\nconst CardWeight = styled.div`\r\n  background: ${\r\n  props => props.disabled ?\r\n    colors.disabledColor :\r\n    props.selected ?\r\n      colors.selectedColor :\r\n      colors.defaultColor\r\n  }\r\n`;\r\n\r\nexport default FoodCard;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport FoodCard from './components/FoodCard';\r\nimport catImage from './images/cat.png';\r\n\r\nfunction App() {\r\n\r\n  const cardsInit = [\r\n    {\r\n      description: 'Сказочное заморское яство',\r\n      title: 'Нямушка',\r\n      taste: 'с фуа-гра',\r\n      extras: [\r\n        {\r\n          amount: 10,\r\n          text: 'порций'\r\n        },\r\n        {\r\n          text: 'мышь в подарок'\r\n        }\r\n      ],\r\n      weight: 0.5,\r\n      selectedText: 'Печень утки разварная с артишоками.',\r\n      image: catImage,\r\n      disabled: false,\r\n    },\r\n    {\r\n      description: 'Сказочное заморское яство',\r\n      title: 'Нямушка',\r\n      taste: 'с рыбой',\r\n      extras: [\r\n        {\r\n          amount: 40,\r\n          text: 'порций'\r\n        },\r\n        {\r\n          amount: 2,\r\n          text: 'мыши в подарок'\r\n        }\r\n      ],\r\n      selectedText: 'Головы щучьи с чеснком да свежайшая сёмгушка.',\r\n      weight: 2,\r\n      image: catImage,\r\n      disabled: false,\r\n      selected: true,\r\n    },\r\n    {\r\n      description: 'Сказочное заморское яство',\r\n      title: 'Нямушка',\r\n      taste: 'с курой',\r\n      extras: [\r\n        {\r\n          amount: 100,\r\n          text: 'порций'\r\n        },\r\n        {\r\n          amount: 5,\r\n          text: 'мышей в подарок'\r\n        },\r\n        {\r\n          text: 'заказчик доволен'\r\n        }\r\n      ],\r\n      selectedText: 'Филе из циплят с трюфелями в бульоне.',\r\n      weight: 5,\r\n      image: catImage,\r\n      disabled: true,\r\n    }];\r\n    const [cards, setCards] = React.useState(cardsInit);\r\n  \r\n\r\n  const showCards = () => {\r\n    const cardsHtml = [];\r\n    cards.map((card,i) => {\r\n      cardsHtml.push(<FoodCard {...card} toogleSelectCard={toogleSelectCard} cardIndex={i} key={card.taste}/>)\r\n    })\r\n    return cardsHtml;\r\n  }\r\n\r\n  const toogleSelectCard = (cardIndex) => {\r\n    const newCards = [...cards];\r\n    newCards[cardIndex].selected = !newCards[cardIndex].selected;\r\n    setCards(newCards);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App__title\">\r\n        <h1 className=\"App__title-h1\">Ты сегодня покормил кота?</h1>\r\n      </div>\r\n      <div className=\"App__cards\">\r\n        {showCards()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/cat.6145f81a.png\";"],"sourceRoot":""}